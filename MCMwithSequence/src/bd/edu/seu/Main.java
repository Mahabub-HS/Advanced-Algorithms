package bd.edu.seu;public class Main {    public static void main(String[] args) {        int[] arr={4,10,3,12,20,7};        int[] arr1={5,4,6,2,7};        System.out.println(String.format("Minimum operation need %s ",MCM(arr,arr.length)));        System.out.println(String.format("Minimum operation need %s ",MCM(arr1,arr1.length)));    }    private static String MCM(int[] arr, int n) {        int[][] M = new int[n][n];        int[][] S = new int[n][n];        int l,i,j,k;        for(l=1;l<=n;l++){            for(i=1;i<=n-l;i++){                j=i+l-1;                if(i==j){                    M[i][j]=0;                }else{                    M[i][j]=Integer.MAX_VALUE;                    for(k=i;k<j;k++){                        int min = M[i][k]+M[k+1][j]+arr[i-1]*arr[k]*arr[j];                        if(min<M[i][j]){                            M[i][j]=min;                            S[i][j]=k;                        }                    }                }            }        }        return M[1][n-1]+"\nSequnce : "+getSequence(S,1,n-1);    }    private static String getSequence(int[][] s, int i, int j) {        if(i==j){            return "M"+i;        }else{            String temp = "";            temp+="(";            temp+=getSequence(s,i,s[i][j]);            temp+="*";            temp+=getSequence(s,s[i][j]+1,j);            temp+=")";            return temp;        }    }}